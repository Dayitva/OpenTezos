(self.webpackChunkopentezos=self.webpackChunkopentezos||[]).push([[8312],{3905:function(e,t,r){"use strict";r.d(t,{Zo:function(){return l},kt:function(){return h}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=n.createContext({}),m=function(e){var t=n.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},l=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),p=m(r),h=a,d=p["".concat(c,".").concat(h)]||p[h]||u[h]||o;return r?n.createElement(d,i(i({ref:t},l),{},{components:r})):n.createElement(d,i({ref:t},l))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var m=2;m<o;m++)i[m]=r[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},3933:function(e,t,r){"use strict";r.d(t,{Z:function(){return o}});var n=r(7294),a={button:"button_2UxY"},o=function(e){var t=e.children;return n.createElement("div",{className:a.root},t)}},5164:function(e,t,r){"use strict";r.d(t,{Z:function(){return o}});var n=r(3552),a=r(7294),o=function(e){function t(t){var r;return(r=e.call(this,t)||this).state={userName:"",sucess:void 0},r}(0,n.Z)(t,e);var r=t.prototype;return r.handleSubmit=function(e){var t=this;e.preventDefault();var r=0,n=0;this.props.children.forEach((function(e){"ExamCheckbox"===e.props.mdxType&&(r+=1,"true"===e.props.isCorrect!=!!t.state[e.props.name]&&(n+=1))})),parseInt(n/r*100)<=10?this.setState({success:!0}):this.setState({success:!1})},r.handleChange=function(e){var t;e.preventDefault();var r=e.target,n="checkbox"===r.type?r.checked:r.value,a=r.name;this.setState(((t={})[a]=n,t))},r.handleNameChange=function(e){e.preventDefault(),this.setState({userName:e.target.value})},r.render=function(){var e=this;return a.createElement("form",{onSubmit:function(t){return e.handleSubmit(t)}},this.props.children.map((function(t){return t.props&&"ExamCheckbox"===t.props.mdxType?a.createElement("div",{key:t.props.name},a.createElement("label",null,a.createElement("input",{className:"exam-checkbox",name:t.props.name,type:"checkbox",checked:!!e.state[t.props.name],onChange:function(t){return e.handleChange(t)}}),t.props.children),a.createElement("br",null)):t.props&&"h3"===t.props.mdxType?a.createElement("div",{key:t.props.children},a.createElement("br",null),a.createElement("br",null),t):t})),a.createElement("br",null),a.createElement("br",null),this.state.success?a.createElement("div",{className:"green"},"Congrats, your pdf certificate has been sent!"):a.createElement("div",null,!1===this.state.success&&a.createElement("div",{className:"red"},"Sorry, you made too many mistakes, please try again."),a.createElement("label",null,"Your name:",a.createElement("input",{type:"text",value:this.state.name,onChange:function(t){return e.handleNameChange(t)},className:"exam-name"})),a.createElement("input",{type:"submit",value:"Submit",className:"exam-submit"})))},t}(a.Component)},6492:function(e,t,r){"use strict";r.r(t),r.d(t,{frontMatter:function(){return c},metadata:function(){return m},toc:function(){return l},default:function(){return p}});var n=r(2122),a=r(9756),o=(r(7294),r(3905)),i=r(5164),s=r(3933),c={id:"exam",title:"Exam",authors:"Frank Hillard"},m={unversionedId:"formal-verification/exam",id:"formal-verification/exam",isDocsHomePage:!1,title:"Exam",description:"Question 1",source:"@site/docs/formal-verification/exam.md",sourceDirName:"formal-verification",slug:"/formal-verification/exam",permalink:"/formal-verification/exam",editUrl:"https://github.com/octo-technology/OpenTezos/tree/main/docs/formal-verification/exam.md",version:"current",lastUpdatedBy:"AymericBethencourt",lastUpdatedAt:1623413479,formattedLastUpdatedAt:"6/11/2021",frontMatter:{id:"exam",title:"Exam",authors:"Frank Hillard"},sidebar:"docs",previous:{title:"Formal verification on smart contracts",permalink:"/formal-verification/modeling-theorem"},next:{title:"Introduction",permalink:"/private"}},l=[{value:"Question 1",id:"question-1",children:[]},{value:"Question 2",id:"question-2",children:[]},{value:"Question 3",id:"question-3",children:[]},{value:"Question 4",id:"question-4",children:[]},{value:"Question 5",id:"question-5",children:[]},{value:"Question 6",id:"question-6",children:[]},{value:"Question 7",id:"question-7",children:[]}],u={toc:l};function p(e){var t=e.components,r=(0,a.Z)(e,["components"]);return(0,o.kt)("wrapper",(0,n.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)(i.Z,{moduleName:"DeFi",mdxType:"ExamForm"},(0,o.kt)("h3",{id:"question-1"},"Question 1"),(0,o.kt)("p",null,"What is returned by the execution of a smart contract ?"),(0,o.kt)(s.Z,{name:"00",isCorrect:"false",mdxType:"ExamCheckbox"},"The current storage state when invoking the smart contract"),(0,o.kt)(s.Z,{name:"01",isCorrect:"true",mdxType:"ExamCheckbox"},"The modified storage state after invoking the smart contract"),(0,o.kt)(s.Z,{name:"02",isCorrect:"false",mdxType:"ExamCheckbox"},"The entrypoint that has been called (and its related parameters)"),(0,o.kt)(s.Z,{name:"03",isCorrect:"true",mdxType:"ExamCheckbox"},"The list of emitted operations produced by the execution of the smart contract"),(0,o.kt)(s.Z,{name:"04",isCorrect:"false",mdxType:"ExamCheckbox"},"The balance of the contract"),(0,o.kt)(s.Z,{name:"05",isCorrect:"false",mdxType:"ExamCheckbox"},"The size of the storage"),(0,o.kt)(s.Z,{name:"06",isCorrect:"false",mdxType:"ExamCheckbox"},"The code of the smart contract"),(0,o.kt)(s.Z,{name:"07",isCorrect:"false",mdxType:"ExamCheckbox"},"The list of users allowed to call the smart contract"),(0,o.kt)("h3",{id:"question-2"},"Question 2"),(0,o.kt)("p",null,"What makes the bridge between the Tezos world and the formal world of Coq ?"),(0,o.kt)(s.Z,{name:"10",isCorrect:"false",mdxType:"ExamCheckbox"},"The Michelson language"),(0,o.kt)(s.Z,{name:"11",isCorrect:"false",mdxType:"ExamCheckbox"},"The Coq universe (predefined Coq types)"),(0,o.kt)(s.Z,{name:"12",isCorrect:"true",mdxType:"ExamCheckbox"},"The Mi-cho-coq library"),(0,o.kt)(s.Z,{name:"13",isCorrect:"false",mdxType:"ExamCheckbox"},"The Tezos protocol"),(0,o.kt)("h3",{id:"question-3"},"Question 3"),(0,o.kt)("p",null,"Who is Thierry Coquand ?"),(0,o.kt)(s.Z,{name:"20",isCorrect:"false",mdxType:"ExamCheckbox"},"The founder of the type theory called \u03bb-calculus"),(0,o.kt)(s.Z,{name:"21",isCorrect:"true",mdxType:"ExamCheckbox"},"The founder of the type theory called the calculus of constructions (CoC)."),(0,o.kt)(s.Z,{name:"22",isCorrect:"true",mdxType:"ExamCheckbox"},"The principal developer of the _Coq_ proof assistant."),(0,o.kt)(s.Z,{name:"23",isCorrect:"false",mdxType:"ExamCheckbox"},"The founder of the intuitionistic type theory."),(0,o.kt)("h3",{id:"question-4"},"Question 4"),(0,o.kt)("p",null,"GADT stands for ?"),(0,o.kt)(s.Z,{name:"30",isCorrect:"true",mdxType:"ExamCheckbox"},"Generalized algebraic data type"),(0,o.kt)(s.Z,{name:"31",isCorrect:"false",mdxType:"ExamCheckbox"},"Generic abstract data type"),(0,o.kt)(s.Z,{name:"32",isCorrect:"false",mdxType:"ExamCheckbox"},"Generalized abstract data type"),(0,o.kt)(s.Z,{name:"33",isCorrect:"false",mdxType:"ExamCheckbox"},"Generic algebraic data type"),(0,o.kt)("h3",{id:"question-5"},"Question 5"),(0,o.kt)("p",null,"What kind of algebra is used to define the Michelson language ?"),(0,o.kt)(s.Z,{name:"40",isCorrect:"false",mdxType:"ExamCheckbox"},"a non-commutative monoid (which only provides associativity of _pairs_, because _pairs_ are not distributive over variants)"),(0,o.kt)(s.Z,{name:"41",isCorrect:"true",mdxType:"ExamCheckbox"},'a semi-ring (the rule `a + inv(a) ~ Void` is not verified (where "inv(a)" represents the inverse of `a`); because `inv(a)` does not exist)'),(0,o.kt)(s.Z,{name:"42",isCorrect:"false",mdxType:"ExamCheckbox"},'a ring (the rule `a + inv(a) ~ Void` is verified (where "inv(a)" represents the inverse of `a`))'),(0,o.kt)(s.Z,{name:"43",isCorrect:"false",mdxType:"ExamCheckbox"},"a group (fully symetric)"),(0,o.kt)("h3",{id:"question-6"},"Question 6"),(0,o.kt)("p",null,'We have seen that a Michelson script must be translated into an annotated script (i.e. a formal definition) (because Mi-Cho-Coq provides an equivalent for each Michelson instruction). In the theorem we want to prove, we specify that "the execution of the annotated script is equivalent to post-conditions". Who is responsible for the execution of this annotated script ?'),(0,o.kt)(s.Z,{name:"50",isCorrect:"false",mdxType:"ExamCheckbox"},"The Michelson interpreter"),(0,o.kt)(s.Z,{name:"51",isCorrect:"true",mdxType:"ExamCheckbox"},"The Mi-Cho-Coq evaluator"),(0,o.kt)(s.Z,{name:"52",isCorrect:"false",mdxType:"ExamCheckbox"},"The Coq inference engine"),(0,o.kt)("h3",{id:"question-7"},"Question 7"),(0,o.kt)("p",null,"What post-conditions depends on (What post-conditions are built upon) ?"),(0,o.kt)(s.Z,{name:"60",isCorrect:"true",mdxType:"ExamCheckbox"},"The storage modification produced by the execution of the smart contract"),(0,o.kt)(s.Z,{name:"61",isCorrect:"true",mdxType:"ExamCheckbox"},"The entrypoint parameter which is invoked"),(0,o.kt)(s.Z,{name:"62",isCorrect:"false",mdxType:"ExamCheckbox"},"The sequence of Michelson instructions (smart contract code)"),(0,o.kt)(s.Z,{name:"63",isCorrect:"true",mdxType:"ExamCheckbox"},"Operations produced by the execution of the smart contract"),(0,o.kt)(s.Z,{name:"64",isCorrect:"true",mdxType:"ExamCheckbox"},"Environment variables (transaction properties such as sender, amount)"),(0,o.kt)(s.Z,{name:"65",isCorrect:"false",mdxType:"ExamCheckbox"},"Predefined Coq types and inductive types (Coq libraries)"),(0,o.kt)(s.Z,{name:"66",isCorrect:"false",mdxType:"ExamCheckbox"},"Mi-Cho-Coq library")))}p.isMDXComponent=!0}}]);